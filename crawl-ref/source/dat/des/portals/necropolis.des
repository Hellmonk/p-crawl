###############################################################################
# necropolis.des
#
# The portal version of 0.22 through 0.32's take on ghost vaults.
# This time, rather than letting people delay them indefinitely or taking up
# the vault highlight for a floor, this packs together three ghost vaults
# together in discrete subvaults to a portal as one can't revisit.
#
# Up to three Necropolises can spawn each game across most of a 3-rune game,
# and each scales heavily across said floors. As with before, subvaults are
# still somewhat themed per-branch based on the Necropolis entry location. Past
# the Lair branches, the four remaining branches pair up on vault contents due
# to their various overlaps as well as comparative necessity versus Desolation
# and Wizlabs.
#
# As entirely optional and discrete challenges, many players will opt out of
# bothering to open any ghost subvaults. This is somewhat fine, but ideally
# rewards (ideally thematic and build-specific) can provide enough of an
# incentive for people to risk fights for known rewards compared to normal
# portal unknown rewards.
#
# <<1>>          Necropolis entry vaults
# <<2>>          Necropolis layout vaults
# <<3>>          Ghost subvaults
#     <<3.1>>        Generic subvaults with allow_dup
#     <<3.2>>        Themed subvaults without allow_dup
#
###############################################################################

: crawl_require("dlua/dungeon.lua")
: crawl_require('dlua/vault.lua')
: crawl_require('dlua/ghost.lua')

# Lua code exclusive to setting up Necropolis contents is kept here.
# One-off and two-off ghost vault code has been moved to ghost.lua.

{{
function necropolis_tag()
    if you.in_branch("D") then
      return "uniq_necropolis_early"
    elseif you.in_branch("D") then
      return "uniq_necropolis_mid"
    else
      return "uniq_necropolis_late"
    end
end

-- Due to the order vaults are assigned tags versus the generation at the
-- start of the game, we have to manually use vetos instead of uniq tags.
function necropolis_veto()
    return dgn.uniq_tag_used(necropolis_tag())
end

function necropolis_portal_entry(e)
    local timeout_turns = crawl.random_range(900, 1200)

    local messager = timed_msg {
        initmsg = { "You hear the solemn chanting of funerary rites.",
                    "There is an entrance to the Necropolis on this level. "
                    .. "Hurry and find it before the portal closes!" },
        finalmsg = "The funeral rites reach a fever pitch!",
        verb = '',
        noisemaker = 'funeral chant',
        ranges = {
            { 7500, 'lone wailing' },  { 6000, 'small ensemble' },
            { 3250, 'gathering chorus' }, { 2250, 'rising multitudes' },
            { 0, 'full choir' }
        }
    }
    dgn.persist.necropolis_difficulty = necropolis_difficulty()

    e.lua_marker('O',
        timed_marker {
          disappear = "The funeral rites fall silent, " ..
                      "and the phantasmal passage disappears!",
          entity = 'archway',
          turns = timeout_turns,
          single_timed = true,
          floor = "expired_portal",
          feat_tile = "dngn_necropolis_gone",
          msg = messager })
    -- Roughly corresponding to the average (if hardly the median) number of
    -- ghost vaults one got per game previously. Early Necropolis spawns are
    -- quite hard though (player ghosts are too above the curve), so lower
    -- their odds on the earliest floors. Vaults:1-4 Neccropolis entries are
    -- placed seperately via vaults_default_options() and pick_room().
    e.chance(350)
    e.depth_chance("D:5-7", 275)
    if crawl.game_started() then
      e.tags(necropolis_tag())
    end
    e.tags("vaults_necropolis no_monster_gen no_item_gen no_trap_gen chance_necropolis")
    e.kfeat("O = enter_necropolis")
    e.kfeat("a = x")
    e.kfeat("t = t")
    necropolis_default_appearance(e)
    e.colour("' = lightmagenta")
    e.colour("a = white")
    e.tile("a = wall_catacombs")
    if you.in_branch("Depths") then
      e.tile("G = dngn_statue_depths_zot_angel")
    else
      e.tile("G = dngn_statue_angel")
    end
    e.tile("w = dngn_starwater")
    e.set_feature_name("tree", "tree of woe")
    e.set_feature_name("metal_wall", "archival metal wall")
    e.ftile("'On = floor_necropolis_squares")
    e.ftile("` = floor_necropolis_square_grass")
    e.ftile("Gt = floor_necropolis_grass")
end

function necropolis_difficulty()
  if you.in_branch("D") then
    if you.depth() < 8 then
      return "pre_temple_d"
    elseif you.depth() < 12 then
      return "pre_lair_d"
    else
      return "post_lair_d"
    end
  elseif you.in_branch("D") then
    return you.branch():lower()
  else -- Depths, Crypt.
    return "depths_crypt"
  end
end

function necropolis_in_lair_branch()
  local br = dgn.persist.necropolis_difficulty
  return br == "snake" or br == "swamp" or br == "shoals" or br == "spider"
end

-- Save lines while doing some highly specific subvault tagging.
function necropolis_depth_tagging(e, array)
  e.tags("unrand")
  if array[1] == "all" then
    local all_tags = { "pre_temple_d", "pre_lair_d", "post_lair_d", "lair",
                       "orc", "snake", "swamp", "shoals", "spider",
                       "vaults_elf", "depths_crypt" }
    for i, listing in ipairs(all_tags) do
      e.tags("necropolis_subvault_" .. listing)
    end
  else
    for i, depth_tag in ipairs(array) do
      e.tags("necropolis_subvault_" .. depth_tag)
    end
  end
end

-- This mixes in a light amount of undead into a relatively flattened list
-- for all Necropolis-spawning branches to make given ghost vaults more
-- reliable in their generic branch spawn pulls.
-- TODO: Adding no_convoke vault content flags could allow using druids here.
function necropolis_generic_spawns(e, _0, _9, _8)
  if _0 == nil then
    _0 = "0"
  end
  if _9 == nil then
    _9 = "9"
  end
  if _8 == nil then
    _8 = "8"
  end
  if dgn.persist.necropolis_difficulty == "pre_temple_d" then
    e.kmons(_0 .. " = place:D:5 w:40 / spectral jackal")
    e.kmons(_9 .. " = place:D:1 w:30 / spectre place:D:1")
    e.kmons(_8 .. " = place:D:1 w:15 / wraith w:5")
  elseif dgn.persist.necropolis_difficulty == "pre_lair_d" then
    e.kmons(_0 .. " = place:D:1 w:60 / spectre place:D:1")
    e.kmons(_9 .. " = place:D:1 w:40 / spectre place:D:1 / wraith w:5")
    e.kmons(_8 .. " = place:D:1 w:30 / \
                      gargoyle / spectre place:D:1 w:5 / shadowghast w:5")
  elseif dgn.persist.necropolis_difficulty == "post_lair_d" then
    e.kmons(_0 .. " = place:D:1 w:40 / \
                      simulacrum place:D:1 / spectre place:D:1 / \
                      zombie place:D:1 / laughing skull")
    e.kmons(_9 .. " = freezing wraith / gargoyle / boggart / necromancer")
    e.kmons(_8 .. " = very ugly thing / deep troll / phantasmal warrior / \
                      shadow dragon w:5 / spectral fire dragon / \
                      spectral ice dragon / flayed ghost")
  elseif dgn.persist.necropolis_difficulty == "lair" then
    e.kmons(_0 .. " = bullfrog / water moccasin / wyvern / basilisk / yak / \
                      polar bear / spectral bullfrog w:20 / spectral yak w:20")
    e.kmons(_9 .. " = cane toad / black mamba / elephant / death yak / \
                      rime drake / lindwurm / dream sheep / raven w:2")
    e.kmons(_8 .. " = skyshark / anaconda / manticore / wolf spider / \
                      alligator / dire elephant / catoblepas / \
                      anaconda zombie w:5 / wolf spider zombie w:5 / \
                      skyshark zombie w:5 / alligator zombie w:5")
  elseif dgn.persist.necropolis_difficulty == "orc" then
    e.kmons(_0 .. " = two-headed ogre / \
                      spectral orc warrior / warg zombie w:5")
    e.kmons(_9 .. " = kobold blastminer / orc knight / \
                      orc high priest / orc sorcerer")
    e.kmons(_8 .. " = ogre mage / obsidian bat / orc warlord w:14")
  elseif dgn.persist.necropolis_difficulty == "snake" then
    -- No undead in the non-unholy Lair branches.
    e.kmons(_0 .. " = naga w:15 / salamander w:15 / black mamba / \
                      mana viper / anaconda")
    e.kmons(_9 .. " = naga warrior / naga ritualist / \
                      naga sharpshooter / salamander mystic")
    e.kmons(_8 .. " = nagaraja / guardian serpent / \
                      salamander tyrant / shock serpent")
  elseif dgn.persist.necropolis_difficulty == "swamp" then
    e.kmons(_0 .. " = swamp dragon / goliath frog / swamp worm / bog body / \
                      alligator / spectral swamp dragon / spectral alligator")
    e.kmons(_9 .. " = spriggan rider / will-o-the-wisp / bunyip / hydra")
    e.kmons(_8 .. " = spriggan air mage w:5 / spriggan berserker / \
                      fenstrider witch / thorn hunter / shambling mangrove / \
                      ghost crab / tentacled monstrosity")
  elseif dgn.persist.necropolis_difficulty == "shoals" then
    e.kmons(_0 .. " = merfolk w:15 / merfolk siren w:15 / \
                      water elemental w:15 / cyclops / faun / \
                      harpy / wind drake / sea snake / skyshark")
    e.kmons(_9 .. " = merfolk impaler / merfolk avatar / water nymph / satyr")
    e.kmons(_8 .. " = merfolk javelineer / merfolk aquamancer / \
                      alligator snapping turtle / sphinx marauder / \
                      formless jellyfish")
  elseif dgn.persist.necropolis_difficulty == "spider" then
    e.kmons(_0 .. " = culicivora / tarantella / redback / wolf spider / \
                      jumping spider / wolf spider simulacrum")
    e.kmons(_9 .. " = radroach / entropy weaver / demonic crawler / \
                      steelbarb worm / torpor snail w:5 / \
                      pharaoh ant / jorogumo / death scarab w:15 / \
                      spectral emperor scorpion / broodmother zombie")
    e.kmons(_8 .. " = moth of wrath / sun moth / emperor scorpion / \
                      broodmother / orb spider / spark wasp / \
                      emperor scorpion zombie")
  elseif dgn.persist.necropolis_difficulty == "vaults_elf" then
    e.kmons(_0 .. " = vault sentinel / yaktaur w:5 / ironbound preserver / \
                      orc knight w:5 / orc warlord / sphinx marauder w:5 / \
                      deep elf zephyrmancer / deep elf knight / \
                      deep elf archer / crawling flesh cage / \
                      guardian sphinx draugr")
    e.kmons(_9 .. " = ironbound mechanist / ironbound frostheart / \
                      ironbound thunderhulk / yaktaur captain / ettin w:5 / \
                      guardian sphinx / peacekeeper / crystal guardian / \
                      war gargoyle / air elemental / thermic dynamo w:15 / \
                      dancing weapon w:25 / deep elf annihilator w:15 / \
                      deep elf high priest")
    e.kmons(_8 .. " = vault warden / war gargoyle / titan / iron dragon / \
                      quicksilver dragon / undying armoury / \
                      deep elf death mage / deep elf elementalist / \
                      deep elf blademaster / deep elf master archer")
  elseif dgn.persist.necropolis_difficulty == "depths_crypt" then
    e.kmons(_0 .. " = frost giant / fire giant / rakshasa / hell knight / \
                      deep troll earth mage / spriggan berserker / \
                      very ugly thing / kobold fleshcrafter w:5 / \
                      necromancer w:5 / cognitogaunt w:5 / \
                      phantasmal warrior / laughing skull band / jiangshi")
    e.kmons(_9 .. " = spriggan air mage / spriggan defender / spark wasp / \
                      glass eye / shadow dragon / walking earthen tome / \
                      walking frostbound tome / vampire knight / vampire mage / \
                      vampire knight / flayed ghost w:5 / eidolon w:5 / lich")
    e.kmons(_8 .. " = walking crystal tome / walking divine tome w:5 / \
                      alderking / caustic shrike w:5 / juggernaut / wyrmhole / \
                      golden dragon / ancient lich w:15 / dread lich w:15 / \
                      vampire bloodprince w:5 / revenant soulmonger w:5 / \
                      curse skull w:5")
  end
end

function necropolis_portal_setup(e)
  e.tags("no_monster_gen no_pool_fixup")
  e.kfeat("<> = exit_necropolis")

  -- Not actually used outside of summoning;
  -- see the generic_spawns function above.
  if dgn.persist.necropolis_difficulty == "pre_temple_d" then
    e.set_random_mon_list("phantom / spectre place:D:1")
  elseif dgn.persist.necropolis_difficulty == "pre_lair_d" then
    e.set_random_mon_list("wraith / shadowghast / spectre place:D:1")
  elseif dgn.persist.necropolis_difficulty == "lair" then
    e.set_random_mon_list("wraith / shadowghast / spectral cane toad")
  elseif dgn.persist.necropolis_difficulty == "orc" then
    e.set_random_mon_list("shadowghast / spectral two-headed ogre")
  elseif dgn.persist.necropolis_difficulty == "post_lair_d" then
    e.set_random_mon_list("wraith w:5 / shadowghast w:5 / vampire / \
                           freezing wraith w:5 / spectre place:D:1")
  elseif necropolis_in_lair_branch() then
    e.set_random_mon_list("vampire w:5 / freezing wraith w:5 / \
                           flayed ghost / phantasmal warrior / \
                           spectral wolf spider / spectral shock serpent / \
                           spectral alligator / spectral sea snake")
  elseif dgn.persist.necropolis_difficulty == "vaults_elf" then
    e.set_random_mon_list("flayed ghost / eidolon / death knight w:5 / \
                           deep elf death mage w:15 / vampire mage / \
                           spectral storm dragon / spectral guardian sphinx")
  elseif dgn.persist.necropolis_difficulty == "depths_crypt" then
    e.set_random_mon_list("flayed ghost / eidolon / revenant soulmonger /\
                           phantasmal warrior / vampire knight / \
                           vampire mage / place:Depths:$ draugr w:25")
  end

  e.set_feature_name("tree", "tree of woe")
  e.set_feature_name("metal_wall", "archival metal wall")
end

-- What's a sad ghost town without ambient (untouchable) ghosts as well?
function necropolis_sea_ghosts(e)
  local mons = "weeping skull w:120 att:neutral / lost soul w:79 att:neutral /\
                poltergeist w:1 att:neutral"

  if dgn.persist.necropolis_difficulty == "pre_temple_d" then
    mons = mons .. " / spectral kobold att:neutral"
  elseif dgn.persist.necropolis_difficulty == "pre_lair_d" then
    mons = mons .. " / spectral ogre att:neutral"
  elseif dgn.persist.necropolis_difficulty == "lair" then
    mons = mons .. " / spectral human att:neutral"
  elseif dgn.persist.necropolis_difficulty == "orc" then
    mons = mons .. " / spectral orc att:neutral"
  elseif dgn.persist.necropolis_difficulty == "post_lair_d" then
    mons = mons .. " / spectral centaur att:neutral"
  elseif dgn.persist.necropolis_difficulty == "snake" then
    mons = mons .. " / spectral naga att:neutral"
  elseif dgn.persist.necropolis_difficulty == "shoals" then
    mons = mons .. " / spectral merfolk att:neutral"
  elseif dgn.persist.necropolis_difficulty == "vaults_elf" then
    mons = mons .. " / spectral elf att:neutral"
  elseif dgn.persist.necropolis_difficulty == "depths_crypt" then
    mons = mons .. " / spectral spriggan att:neutral"
  end
  e.kmons("W = " .. mons)
  e.kfeat("W = w")
  e.nsubst("w = 10 : WWWw / 10 = Ww / *:w")
  e.tile("wW = dngn_starwater")
  e.kprop("wW = no_tele_into")
end

function necropolis_default_appearance(e)
  e.tile("c = wall_stone_necropolis")
  e.tile("v = metal_wall_necropolis")
  e.tile("o = clear_permarock_necropolis")
  e.tile("t = dngn_tree_of_woe")
  e.tile("G = dngn_necropolis_gravestone")
  e.tile("A = dngn_necropolis_gone")
  e.colour("t = blue")
end

-- This function should be called by every ghost vault: it sets the common tags
-- needed for ghost vaults and cleans up some other line bits. See the ghost
-- vault guidelines in docs/develop/levels/guidelines.md.

-- @bool[opt=true] default_tiles If false, this vault will not use the same
-- tiles most Necropolis vaults use for statues, walls, or trees.
function necropolis_ghost_setup(e, default_tiles)
    if default_tiles == nil then
        default_tiles = true
    end

    -- Tags common to all ghost vaults.
    e.tags("no_trap_gen no_monster_gen patrolling")

    if default_tiles then
        necropolis_default_appearance(e)
    end

    e.kitem("$ = $ level:" .. you.absdepth() + 2 .. " no_pickup")
end

-- Without this, using &~ on a fresh character will crash going here.
function necropolis_wizmode_handling(e)
  if not dgn.persist.necropolis_difficulty then
    crawl.mpr("<red>Going directly to Necropolis without placing an entry " ..
              "vault is buggy. Placing a Depths / Crypt Necropolis.</red>")
    dgn.persist.necropolis_difficulty = "depths_crypt"
  end
end

-- Basic loot scale for extra loot for lone ghosts. Takes none_glyph to use
-- when it would like no item and adds depth appropriate items to d and e
-- glyphs.
function lone_ghost_extra_loot(e, none_glyph)
    if dgn.persist.necropolis_difficulty == "pre_temple_d" or
       dgn.persist.necropolis_difficulty == "pre_lair_d" then
        e.subst("d = %$*" .. none_glyph)
        e.subst("e = " ..none_glyph)
    elseif dgn.persist.necropolis_difficulty == "lair" then
        e.subst("d = %*")
        e.subst("e = %$" .. none_glyph .. none_glyph)
    elseif dgn.persist.necropolis_difficulty == "orc" or
       dgn.persist.necropolis_difficulty == "post_lair_d" then
        e.subst("d = *|")
        e.subst("e = $%")
    else
        e.subst("de = |*")
    end
end

-- Basic loot scale for ghost "guarded" loot for lone ghost vaults. KITEMS this
-- loot to ghost_glyph.
function lone_ghost_guarded_loot(e, ghost_glyph)
    if dgn.persist.necropolis_difficulty == "pre_temple_d" then
        e.kitem(ghost_glyph .. " = star_item / any")
    elseif dgn.persist.necropolis_difficulty == "pre_lair_d" then
        e.kitem(ghost_glyph .. " = star_item")
    else
        e.kitem(ghost_glyph .. " = superb_item / star_item")
    end
end

-- Randart weaker weapons of spectral or reaping in the more generic & sparse
-- ghost vaults for very early on, to bump up the earliest visits. Two-handers
-- are currently unpopular vs shields, so mostly lean towards those.
function generic_ghost_weapon_loot(e, subglyph, wglyph)
    local t1 = { "dire flail", "war axe", "halberd",
                 "quarterstaff", "short sword", "long sword" }
    local t2 = { "great mace", "battleaxe", "glaive",
                 "lajatang", "rapier", "great sword" }
    local ego = ""
    local wp = ""
    if crawl.x_chance_in_y(10, 11) then
        local ego = util.random_from({ "ego:spectral", "ego:reaping" })
    end

    if dgn.persist.necropolis_difficulty == "pre_temple_d" or
       dgn.persist.necropolis_difficulty == "pre_lair_d" or
       (dgn.persist.necropolis_difficulty == "lair" and crawl.coinflip()) or
       (dgn.persist.necropolis_difficulty == "orc" and crawl.coinflip()) then
        wp = util.random_from(t1) .. " randart " .. ego
    else
        wp = util.random_from(t2) .. " randart " .. ego
    end

    e.kitem(wglyph .. " = " .. wp)
    e.nsubst(subglyph .. " = 1:" .. wglyph .. " / *:" .. subglyph)
end

function ghost_flavour_unrand_chance(e, subglyph, unglyph, unrand)
    e.kitem(unglyph .. " = " ..unrand)
    if crawl.one_chance_in(100) then
        e.nsubst(subglyph .. " = 1:" .. unglyph .. " / *:" .. subglyph)
    end
end

-- Loot scaling that gradually upgrades items on glyphs 'd' and 'e' with depth
-- of placement. Starting from D:1, 'd' has a chance to become a good potion or
-- scroll item (according to dgn.loot_potions and dgn.loot_scrolls), an
-- auxiliary armour item, or a jewellery item. The latter two can be good_item
-- and then randart with increasing depth.
--
-- This function is used by the more challenging ghost vaults that place many
-- additional monsters as a way to make attempting the vault more worthwhile.
--
-- @tparam table e environment
-- @tparam string kglyphs If nil, use 'd' and 'e' item slots. Otherwise, define
--                        KITEMs on the two characters supplied in kglyphs.
function ghost_good_loot(e, kglyphs)

    local item1fn, item2fn

    -- XXX: it hurts vault readability a fair bit to not use explicit glyphs;
    -- probably this should just be standardized to always define some on
    -- non-default-item glyphs.
    if kglyphs == nil then
        item1fn = e.item
        item2fn = e.item
    else
        item1fn = function(def) e.kitem(kglyphs:sub(1, 1) .. " = " .. def) end
        item2fn = function(def) e.kitem(kglyphs:sub(2, 2) .. " = " .. def) end
    end

    -- Possible loot items.
    local jewellery = "any jewellery"
    local good_jewellery = "any jewellery good_item"
    local randart_jewellery = "any jewellery randart"
    local aux = dgn.aux_armour

    local first_item = true
    local second_item = false
    if dgn.persist.necropolis_difficulty == "pre_temple_d" or
       dgn.persist.necropolis_difficulty == "pre_lair_d" then
        if crawl.coinflip() then
            first_item = false
        end
    elseif dgn.persist.necropolis_difficulty == "post_lair_d" then
        aux = dgn.good_aux_armour
        jewellery = good_jewellery
        if crawl.one_chance_in(4) then
            aux = dgn.randart_aux_armour
            jewellery = randart_jewellery
        end
        if crawl.coinflip() then
            second_item = true
        end
    elseif dgn.persist.necropolis_difficulty == "lair" then
        if crawl.one_chance_in(3) then
            aux = dgn.good_aux_armour
            jewellery = good_jewellery
        end
        if crawl.one_chance_in(4) then
            second_item = true
        end
    elseif dgn.persist.necropolis_difficulty == "orc" then
        if crawl.coinflip() then
            aux = dgn.good_aux_armour
            jewellery = good_jewellery
        end
        if crawl.one_chance_in(3) then
            second_item = true
        end
    elseif dgn.persist.necropolis_difficulty == "swamp"
      or dgn.persist.necropolis_difficulty == "snake"
      or dgn.persist.necropolis_difficulty == "shoals"
      or dgn.persist.necropolis_difficulty == "spider" then
        aux = dgn.good_aux_armour
        jewellery = good_jewellery
        if crawl.one_chance_in(3) then
           aux = dgn.randart_aux_armour
           jewellery = randart_jewellery
        end
        second_item = true
    elseif dgn.persist.necropolis_difficulty == "vaults_elf" then
        aux = dgn.good_aux_armour
        jewellery = good_jewellery
        if crawl.coinflip() then
           aux = dgn.randart_aux_armour
           jewellery = randart_jewellery
        end
        second_item = true
    else
        aux = dgn.randart_aux_armour
        jewellery = randart_jewellery
        second_item = true
    end

    -- Define loot tables of potential item defs.
    -- TODO: add a low chance of talismans to the second_loot list?
    local first_loot = {
                   {name = "scrolls", def = dgn.loot_scrolls, weight = 20},
                   {name = "potions", def = dgn.loot_potions, weight = 20},
                   {name = "aux", def = aux, weight = 10},
                   {name = "jewellery", def = jewellery, weight = 10},
                   {name = "manual", def = "any manual", weight = 5} }
    local second_loot = {
                    {name = "scrolls", def = dgn.loot_scrolls, weight = 10},
                    {name = "potions", def = dgn.loot_potions, weight = 10} }

    -- If we're upgrading the first item , choose a class, define the item
    -- slot, otherwise the slot becomes the usual '|*' definition.
    if first_item then
        chosen = util.random_weighted_from("weight", first_loot)
        item1fn(chosen["def"])
    else
        item1fn("superb_item / star_item")
    end
    if second_item then
        chosen = util.random_weighted_from("weight", second_loot)
        item2fn(chosen["def"])
    else
        item2fn("superb_item / star_item")
    end
end

--[[
One-off and two-off vault functions left in ghost.lua:
 * setup_hydra_weapon
 * wrathful_weapon
 * setup_gozag_gold
 * setup_xom_dancing_weapon
 * setup_armoury_orcs
 * xom_bazaar_special
]]--
}}

#############################################################################
# <<1>> Necropolis entry vaults
#
# Note: don't place any gravestones in these entry vaults, as
# the point is to be burying the dead only inside the Necropolis.
#############################################################################

default-depth: Shoals

NAME:    index_necropolis_entry_arbor_square
veto {{ return necropolis_veto() }}
: necropolis_portal_entry(_G)
: if you.in_branch("D") then
CLEAR:   c
: else
CLEAR:   -
:   if you.in_branch("D") then
COLOUR:  t = lightblue
TILE:    t = dngn_dead_tree_of_woe
:   end
: end
MAP
   c
nnnn----
nttn...-
nnnn''.-
 -.'O'.-
 -.''nnnn
 -...nttn
 ----nnnn
     c
ENDMAP

NAME:    index_necropolis_entry_arbor_path
veto {{ return necropolis_veto() }}
: necropolis_portal_entry(_G)
COLOUR:  t = lightblue
TILE:    t = dngn_dead_tree_of_woe
FTILE:   A = floor_necropolis_squares
FTILE:   ` = floor_necropolis_square_grass
MAP
xxxxxxxxxx
xccccccccx
xntttt`..@
xntO'```..
xnt''''tnx
..```'Atnx
@..`ttttnx
xccccccccx
xxxxxxxxxx
ENDMAP

NAME:    index_necropolis_entry_crossroads
veto {{ return necropolis_veto() }}
: necropolis_portal_entry(_G)
: if you.in_branch("D") then
SUBST:   x = c, @ = .
: elseif (you.in_branch("D") or you.in_branch("Depths"))
:   or you.in_branch("D") and crawl.coinflip() then
SUBST:   v = t
COLOUR:  t = blue
TILE:    t = dngn_tree_of_woe
: elseif you.in_branch("D")
:   or (you.in_branch("D") and crawl.coinflip()) then
COLOUR:  t = lightblue
TILE:    t = dngn_dead_tree_of_woe
: end
MAP
   .xxx
   .nvxx    .xxx
  ..nvvx.   .nvxx
@..'nnnx'....nvvx
xnnn'..'O'..'nnnx
xvvn....'xnnn'..@
xxvn.   .xvvn..
 xxx.    xxvn.
          xxx.
ENDMAP

NAME:    index_necropolis_entry_wine_dark_sea
veto {{ return necropolis_veto() }}
TAGS:    no_pool_fixup vaults_orient_s
: if you.in_branch("D") then
CLEAR:   x
: end
: necropolis_portal_entry(_G)
KPROP:   w = no_tele_into
MAP
 xxxxxxxxx
xxcccccccxx
xccwwwwwccx
xcwwwwwwwcx
xcwwnnnwwcx
xcwnnOnnwcx
xccc'''cccx
 ..'''''..
 .........
ENDMAP

NAME:   index_necropolis_entry_etched_script
veto {{ return necropolis_veto() }}
: if you.in_branch("D") then
TAGS:   no_wall_fixup
SUBST:  x = c
: end
: necropolis_portal_entry(_G)
MAP
x.......x
x.a''a'.x
x.'''''vx
x.v''v'.x
x...O...x
x.'v''v.x
xv'''''.x
x.'a''a.x
x.......x
xxxxxxxxx
ENDMAP

NAME:    index_necropolis_entry_repeat_visits
veto {{ return necropolis_veto() }}
: necropolis_portal_entry(_G)
: if not you.in_branch("D") then
CLEAR:   -
: end
FTILE:   A = floor_necropolis_squares
MAP
      ---
      ...
     ..x'..
     .xcaA..
    ..'aca'.-
 ......Aacx.-
-..x'...'x..-
-.xcaO.....
-.'aca'...
 ..Aacx.
  ..'x..
   ....
    ---
ENDMAP

NAME:    index_necropolis_entry_life_lattice
veto {{ return necropolis_veto() }}
: if you.in_branch("Shoals") then
SUBST:   x = w
: elseif you.in_branch("D") then
SUBST:   x = a
: elseif you.in_branch("D") then
SUBST:   x = v
: end
: necropolis_portal_entry(_G)
MAP
   .       .x
  .x.     .'.
 .'.'.   .x.'.
.'...a.'.'...'.
x.....'O'.....x
.'...'.'.a...'.
 .'.x.   .'.'.
  .'.     .x.
  x.       .
ENDMAP

NAME:    index_necropolis_entry_open_halls
veto {{ return necropolis_veto() }}
TAGS:    vaults_orient_n vaults_orient_s
: necropolis_portal_entry(_G)
: if you.in_branch("D") then
SUBST:   x = t, z = w
: elseif you.in_branch("Shoals") then
SUBST:   z = w
: elseif you.in_branch("D") or you.in_branch("D") then
SUBST:   z = v
: else
SUBST:   z : xxxaan
: end
MAP
x..... .....x
x..z..z..z..x
x...........x
x....'''....x
.....'c'.....
...z.'c'.z...
x...'OcA'...x
...z.'c'.z...
.....'c'.....
x....'''....x
x...........x
x..z..z..z..x
x..... .....x
ENDMAP

NAME:    index_necropolis_entry_miniature_reverse
veto {{ return necropolis_veto() }}
TAGS:    vaults_orient_n
KFEAT:   - = +
SHUFFLE: G` / T'
SUBST:   " = '
: if not you.in_branch("D") then
CLEAR:   ;
: end
FTILE:   +TA = floor_necropolis_squares
: necropolis_portal_entry(_G)
MAP
;;;;;;;;;;;;;
.............
.xxxx...xxxx.
xx``aa-aa``xx
x`G`a...a`G`x
x```+...+```x
xccccc+cccccx
x'''''''''''x
x'''T'''T'''x
x'''''''''''x
cc+ccccccc+cc
c"""c   c"""c
ccOcc   ccAcc
 ccc     ccc
ENDMAP

NAME:    index_necropolis_entry_not_quite_thereafter
veto {{ return necropolis_veto() }}
: necropolis_portal_entry(_G)
SHUFFLE: nGT- / nGT- / nnn" / TGT- / GnG-
FTILE:   '"+ = floor_necropolis_squares
: if you.in_branch("D") then
CLEAR:   x
: end
MAP
  xxxxxxxx...
  xccccccc...
xxxc.nc..+...
xccc..c..c+cx
xc..''c....cx
xcG.'+++...cx
xcccc+O+ccccx
xcT.'+++'.ncx
xc..''c''..cx
xccc..c..cccx
xxxc.TcG.ccxx
  xcccccccx
  xxxxxxxxx
ENDMAP

#############################################################################
# <<2>> Necropolis layouts
#
# Each Necropolis uses the same rough decoration schema of an entry garden
# leading to three seperate 20x20 ghost subvaults. If they have a surrounding
# sea of ghosts, that sea is sealed off by indestructible glass.
#
# TODO: further decorations for future layouts could include:
#   * fountains of ectoplasm (needs lots of write-ups)
#   * altars to Hepliakqana (has to exclude pre-D:1 spawns)
#   * rock and stone tiles from the original branch (needs V/E and U/C tricks)
#   * a transporter entrance seperated from the ghost vaults?
#############################################################################

default-depth: Necropolis

NAME:    regret_index_necropolis_ark
ORIENT:  encompass
PLACE:   Necropolis
KMONS:   f = petrified flower
SHUFFLE: BCD, EF, JKL, MNOPQR, pqrs
SUBST:   BEJ = n, C : nc, K : ncc, DFL = c
SUBST:   M = v, N : vvvcnww, O : vvnwww, PQR = w
SUBST:   p = t, q : tt", r : t""", s = "
FTILE:   ' = floor_necropolis_square_grass
FTILE:   "<tGf = floor_necropolis_grass
: set_feature_name("metal_statue", "iron statue")
: vault_granite_statue_setup(_G, "G", "gravestone")
: decorative_floor(_G, 'V', "mourning vase")
: necropolis_wizmode_handling(_G)
: necropolis_default_appearance(_G)
: subvault('X : necropolis_subvault_' .. dgn.persist.necropolis_difficulty)
: subvault('Y : necropolis_subvault_' .. dgn.persist.necropolis_difficulty)
: subvault('Z : necropolis_subvault_' .. dgn.persist.necropolis_difficulty)
SUBST:   XYZ = .
: necropolis_sea_ghosts(_G)
: necropolis_portal_setup(_G)
MAP
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwQwwQwwwRwwRwwwQwwQwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwoooooooooooooooooooowwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwOwwwOwwwOwwwPwwwPwwwPwwwoocEEcccFFccFFcccEEcoowwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwocc................ccoowwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwocc..................ccowwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwoooooooooooooooooooooooooocYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwooccccccCCCccccccnnccccccDDcYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwwwwNwwNwwNwwoocc........................cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwwwwwwwwwwwwwocc.........................cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwwwwwwwwwwwwwoB..........................+YYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwwwwooooooooooB..........................+YYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwwwoocccJJJcccccc++ccc...ccc++cccc++ccc..cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwwoocc...............ccVcc............ccVcYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwoocc.................ccc..............cccYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwocc...................c''''''''''''''''ccYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwoc...vv...........vv..c'''''''''''''''''cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwoc....................c'''''''''''''''''cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwoK....................c''''"""""""""''''cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwoKXXXXXXXXXXXXXXXXXXXXc'''"tt"q"rrtt"'''cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwMwoKXXXXXXXXXXXXXXXXXXXXc'''"t"q"r"""t"'''cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwocXXXXXXXXXXXXXXXXXXXXc'''"""""""""""'''cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwocXXXXXXXXXXXXXXXXXXXXc'''""f""f""f""'''cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwocXXXXXXXXXXXXXXXXXXXXc''"""G""G""G"""''cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwMwoLXXXXXXXXXXXXXXXXXXXXc''"""""""""""""''cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwoLXXXXXXXXXXXXXXXXXXXXc''"pp"'''''"ss"''cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwv
vwwwwwwwocXXXXXXXXXXXXXXXXXXXXc''"p""'...'""s"''cc...................cowwwwwwwwv
vwwwwwMwocXXXXXXXXXXXXXXXXXXXXc''"p""'.A.'""s"''ccc.................ccowwwwwwwwv
vwwwwwwwoLXXXXXXXXXXXXXXXXXXXXc''""t"'...'"t""'''ccccccccccccccccccccoowwwwwwwwv
vwwwwwwwoLXXXXXXXXXXXXXXXXXXXXc''""t"'...'"t""'''ccccccccccccccccccccoowwwwwwwwv
vwwwwwMwocXXXXXXXXXXXXXXXXXXXXc''"s""'.>.'""p"''ccc................cccowwwwwwwwv
vwwwwwwwocXXXXXXXXXXXXXXXXXXXXc''"s""'...'""p"''cc..................ccowwwwwwwwv
vwwwwwwwoLXXXXXXXXXXXXXXXXXXXXc''"ss"'''''"pp"''cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwMwoLXXXXXXXXXXXXXXXXXXXXc''"""""""""""""''cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwocXXXXXXXXXXXXXXXXXXXXc''"""G""G""G"""''cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwocXXXXXXXXXXXXXXXXXXXXc'''""f""f""f""'''cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwocXXXXXXXXXXXXXXXXXXXXc'''"""""""""""'''cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwMwoKXXXXXXXXXXXXXXXXXXXXc'''"t"""r"q"t"'''cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwoKXXXXXXXXXXXXXXXXXXXXc'''"ttrr"q"tt"'''cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwoK....................c''''"""""""""''''cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwoc....................c'''''''''''''''''cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwoc...vv...........vv..c'''''''''''''''''cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwocc...................c''''''''''''''''ccZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwoocc.................ccc..............cccZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwwoocc...............ccVcc............ccVcZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwwwoocccJJJcccccc++ccc...ccc++cccc++ccc..cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwwwwooooooooooB..........................+ZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwwwwwwwwwwwwwoB..........................+ZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwwwwwwwwwwwwwocc.........................cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwwwwNwwNwwNwwoocc........................cZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwooccccccCCCccccccnnccccccDDcZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwoooooooooooooooooooooooooocZZZZZZZZZZZZZZZZZZZZcowwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwocc..................ccowwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwocc................ccoowwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwOwwwOwwwOwwwPwwwPwwwPwwwoocEEcccFFccFFcccEEcoowwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwoooooooooooooooooooowwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwQwwQwwRwwwwRwwQwwQwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
ENDMAP

NAME:    regret_index_necropolis_wings
ORIENT:  encompass
PLACE:   Necropolis
KMONS:   f = petrified flower
SHUFFLE: BC, DEF, MNOPQR, pqrs
SUBST:   BD = n, C : nc, E : ncc, F = c
SUBST:   M = v, N : vvvcnww, O : vvnwww, PQR = w
SUBST:   pq = t, r : t""", s = "
FTILE:   ' = floor_necropolis_square_grass
FTILE:   "<tGf = floor_necropolis_grass
: set_feature_name("metal_statue", "iron statue")
: vault_granite_statue_setup(_G, "G", "gravestone")
: decorative_floor(_G, 'V', "mourning vase")
: necropolis_wizmode_handling(_G)
: necropolis_default_appearance(_G)
: subvault('X : necropolis_subvault_' .. dgn.persist.necropolis_difficulty)
: subvault('Y : necropolis_subvault_' .. dgn.persist.necropolis_difficulty)
: subvault('Z : necropolis_subvault_' .. dgn.persist.necropolis_difficulty)
SUBST:   XYZ = .
: necropolis_sea_ghosts(_G)
: necropolis_portal_setup(_G)
MAP
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwRwwwwRwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwQwwQwwQwwRwwRwwQwwQwwQwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwoooooooooooooooooooooooowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwoccccEEccFFccFFccEEccccowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwocv..................vcowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwOwwwwwwwwwwwwwwwwocYYYYYYYYYYYYYYYYYYYYcowwwwwwwwwwwwwwwwOwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwoDYYYYYYYYYYYYYYYYYYYYDowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwOwwOwwwwwPwwPwwPwwoDYYYYYYYYYYYYYYYYYYYYDowwPwwPwwPwwwwwOwwOwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwocYYYYYYYYYYYYYYYYYYYYcowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwNwwwwwwwwwwwwwwwwwwwwwwwocYYYYYYYYYYYYYYYYYYYYcowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwoooooooooooooooooooocYYYYYYYYYYYYYYYYYYYYcoooooooooooooooooooowwwwNwwwv
vwwwwwwwoocccEEccFFccEEcccDDocYYYYYYYYYYYYYYYYYYYYcoDDcccEEccFFccEEcccoowwwwwwwv
vwwwNwwoocc................DccYYYYYYYYYYYYYYYYYYYYccD................DDoowwwwwwv
vwwwwwwoDD..................ccYYYYYYYYYYYYYYYYYYYYcc..................DcowwNwwwv
vwwwwwwoDXXXXXXXXXXXXXXXXXXXXcYYYYYYYYYYYYYYYYYYYYcZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwNwwocXXXXXXXXXXXXXXXXXXXXcYYYYYYYYYYYYYYYYYYYYcZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXcYYYYYYYYYYYYYYYYYYYYcZZZZZZZZZZZZZZZZZZZZcowwNwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXcYYYYYYYYYYYYYYYYYYYYcZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXcYYYYYYYYYYYYYYYYYYYYcZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXcYYYYYYYYYYYYYYYYYYYYcZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXcYYYYYYYYYYYYYYYYYYYYcZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXcYYYYYYYYYYYYYYYYYYYYcZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXcYYYYYYYYYYYYYYYYYYYYcZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXcYYYYYYYYYYYYYYYYYYYYcZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXcYYYYYYYYYYYYYYYYYYYYcZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXcv..................vcZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXcccccccccc++ccccccccccZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXccV................VccZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXc....................cZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXc......''''''''......cZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXX+.....''p"rr"p''.....+ZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXX+.....'"Gf""fG"'.....+ZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXc.....''q"ss"q''.....cZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocXXXXXXXXXXXXXXXXXXXXc......''''''''......cZZZZZZZZZZZZZZZZZZZZcowwwwwwv
vwwwwwwocc..................cc....................cc..................ccowwwwwwv
vwwwwwwoocc................ccccV................Vcccc................ccoowwwwwwv
vwwwwwwwooccccccccccccccccccccccccc++cccccc++cccccccccccccccccccccccccoowwwwwwwv
vwwwwwwwoccc........................................................cccowwwwwwwv
vwwwMwwooB...''''''''''''''''''''''''''''''''''''''''''''''''''''''...BoowwMwwwv
vwwwwwwoBB..'''""""""""""""""""""""""""""""""""""""""""""""""""""'''..BBowwwwwwv
vwwwwwwoC...''"r"qq"""G"qq"G""""q""rG"G"G"G"rsp"p"p"""ss"""s""pp""''...Cowwwwwwv
vwwwMwwoC...''""""qq""f""""f"""q"s"rf"f"f"f"r"""""""rr""rr"""""pp"''...CowwMwwwv
vwwwwwwoc...''"""""qq""""""""r"q"""""""""""""""q""""""ss""""""""p"''...cowwwwwwv
vwwwwwwoc...''"p""""""""ss""""""q"""""""""""""""q"r""""""""qq"""""''...cowwwwwwv
vwwwMwwoC...''"pp"""""rr""rr"""""""r"f"f"f"fr"s"q"""f""""f""qq""""''...CowwMwwwv
vwwwwwwoC...''""pp""s"""ss"""p"p"psr"G"G"G"Gr""q""""G"qq"G"""qq"r"''...Cowwwwwwv
vwwwwwwoBB..'''""""""""""""""""""""""""""""""""""""""""""""""""""'''..BBowwwwwwv
vwwwMwwooB...''''''''''''''''''''''''''''''''''''''''''''''''''''''...BoowwMwwwv
vwwwwwwwoccc........................................................cccowwwwwwwv
vwwwwwwwooocccccccc++++cccccccccccccccccccccccccccccccccc++++ccccccccooowwwwwwwv
vwwwwwwwwwooc................cooooooooooooooooooooc................coowwwwwwwwwv
vwwwwwwwwwwocc..............ccowwwwwwwwwwwwwwwwwwocc..............ccowwwwwwwwwwv
vwwwwwwwwwwoocc..A......A..ccoowwwwwwwwwwwwwwwwwwoocc..>......>..ccoowwwwwwwwwwv
vwwwwwwwwwwwoocn..........ncoowwwwwwwwwwwwwwwwwwwwoocn..........ncoowwwwwwwwwwwv
vwwwwwwwwNwwwoonnccccccccnnoowwwRwwwwwwwwwwwwwwRwwwoonnccccccccnnoowwwNwwwwwwwwv
vwwwwwwwwwwwwwoooooooooooooowwwwwwwwwwwwwwwwwwwwwwwwoooooooooooooowwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwNwwNwwwwwwwwwwwwwwwwRwwRwwwwwwwwwwwwwwRwwRwwwwwwwwwwwwwwwwNwwNwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
ENDMAP

NAME:    regret_index_necropolis_purge
ORIENT:  encompass
PLACE:   Necropolis
KMONS:   f = petrified flower
SHUFFLE: BC, DEF, MNOPQR, prqs
SUBST:   BD = n, C : nc, E : nc, F = c
SUBST:   M = v, N : vvvcnww, O : vvnwww, PQR = w
SUBST:   p = t, q : tt", r : t""", s = "
FTILE:   ' = floor_necropolis_square_grass
FTILE:   "A>tGf = floor_necropolis_grass
: set_feature_name("metal_statue", "iron statue")
: vault_granite_statue_setup(_G, "G", "gravestone")
: decorative_floor(_G, 'V', "mourning vase")
: necropolis_wizmode_handling(_G)
: necropolis_default_appearance(_G)
: subvault('X : necropolis_subvault_' .. dgn.persist.necropolis_difficulty)
: subvault('Y : necropolis_subvault_' .. dgn.persist.necropolis_difficulty)
: subvault('Z : necropolis_subvault_' .. dgn.persist.necropolis_difficulty)
SUBST:   XYZ = .
: necropolis_sea_ghosts(_G)
: necropolis_portal_setup(_G)
MAP
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwMwwMwwMwwNwwNwwNwwOwwOwwOwwwwwwwPwwPwwPwwQwwQwwQwwRwwRwwRwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwooooooooooooooooooooooooooooooooooooooooooooooooooooooooowwRwwwv
vwwwwwocccDDcccccccEEcccccccFFcccncncccFFcccccccEEcccccccDDcccowwwwwwv
vwwwwwocvc....................cccnVnccc....................cvcowwwwwwv
vwwwwwocc......................cc...cc.....................VccowwRwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..Dowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..Dowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwRwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwQwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwQwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..+...+..YYYYYYYYYYYYYYYYYYYY..Eowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..+...+..YYYYYYYYYYYYYYYYYYYY..Eowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwQwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwPwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..cowwPwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..Fowwwwwwv
vwwwwwoc..XXXXXXXXXXXXXXXXXXXX..c...c..YYYYYYYYYYYYYYYYYYYY..Fowwwwwwv
vwwwwwocc......................cc...cc......................ccowwPwwwv
vwwwwwoccc....................ccc...ccc....................cccowwwwwwv
vwwwwwocccccccccccc...ccccccccccv+++vccccccccccc++ccccccccccccowwwwwwv
vwwwwwooooccc'''''ccVcc.............+.......................nnowwwwwwv
vwwwwwwwwocc'''''''ccc''............+.......................Vcowwwwwwv
vwwwwwwwwoc''"""""''c''''''''''''...+.......................nnowwwwwwv
vwwwwwwwwoc''"pAs"''c'''''''''''''..vccccccccccc++ccccccccccccowwwwwwv
vwwwwwwwwoc''"""""''c''"""""""""''..ccc....................cccowwwwwwv
vwwwwwwwwoc''"q"s"''c''"s"r"q"p"''..cc......................ccowwOwwwv
vwwwwwwwwoB''"q"r"''c''""""G""""''..c..ZZZZZZZZZZZZZZZZZZZZ..Fowwwwwwv
vwwwwwwwwoB''""q""''+''"r""f""q"''..c..ZZZZZZZZZZZZZZZZZZZZ..Fowwwwwwv
vwwwwwwwwoB''"r"q"''+''""Gf"fG""''..c..ZZZZZZZZZZZZZZZZZZZZ..cowwOwwwv
vwwwwwwwwoc''"s"q"''c''"q""f""r"''..c..ZZZZZZZZZZZZZZZZZZZZ..cowwwwwwv
vwwwwwwwwoc''"""""''c''""""G""""''..c..ZZZZZZZZZZZZZZZZZZZZ..cowwwwwwv
vwwwwwwwwoc''"sAp"''c''"p"q"r"s"''..c..ZZZZZZZZZZZZZZZZZZZZ..cowwOwwwv
vwwwwwwwwoc''"""""''c''"""""""""'''.c..ZZZZZZZZZZZZZZZZZZZZ..cowwwwwwv
vwwwwwwwwocc'''''''ccc'''''''''''''cc..ZZZZZZZZZZZZZZZZZZZZ..cowwwwwwv
vwwwwwwwwoocc'''''ccccc'''''''''''cc...ZZZZZZZZZZZZZZZZZZZZ..cowwNwwwv
vwwwwwwwwwooccCCCccoocccccc++ccccccV...ZZZZZZZZZZZZZZZZZZZZ..Eowwwwwwv
vwwwwwwwwwwoooooooooocc'''''''''''cc...ZZZZZZZZZZZZZZZZZZZZ..Eowwwwwwv
vwwwwwwwwwwwwwwwwwwocc'''''''''''''cc..ZZZZZZZZZZZZZZZZZZZZ..cowwNwwwv
vwwwwwwwwwwwwwwwwwwoc''"""""""""""''c..ZZZZZZZZZZZZZZZZZZZZ..cowwwwwwv
vwwwwwwwwwwwwwwwwwwoC''"p"qq"rs"s"''c..ZZZZZZZZZZZZZZZZZZZZ..cowwwwwwv
vwwwwwwwwwwwwwwwwwwoC''">"""q""">"''c..ZZZZZZZZZZZZZZZZZZZZ..cowwNwwwv
vwwwwwwwwwwwwwwwwwwoC''"s"sr"qq"p"''c..ZZZZZZZZZZZZZZZZZZZZ..cowwwwwwv
vwwwwwwwwwwwwwwwwwwoc''"""""""""""''c..ZZZZZZZZZZZZZZZZZZZZ..cowwwwwwv
vwwwwwwwwwwwwwwwwwwocc'''''''''''''cc..ZZZZZZZZZZZZZZZZZZZZ..cowwMwwwv
vwwwwwwwwwwwwwwwwwwoocc'''''''''''ccc..ZZZZZZZZZZZZZZZZZZZZ..Dowwwwwwv
vwwwwwwwwwwwwwwwwwwwoocccccBBBccccccc..ZZZZZZZZZZZZZZZZZZZZ..Dowwwwwwv
vwwwwwwwwwwwwwwwwwwwwooooooooooooooocc......................ccowwMwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwoccc....................cvcowwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwoccccccccccccccccccccccccccowwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwoooooooooooooooooooooooooooowwMwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
ENDMAP

NAME:    regret_index_necropolis_trine
ORIENT:  encompass
PLACE:   Necropolis
KMONS:   f = petrified flower
SHUFFLE: BC, DEFH, MNOPQ, prqs
SUBST:   BD = n, C : nc, E : nc, FH = c
SUBST:   M = v, N : vvvcnww, O : vvnwwww, PQ = w
SUBST:   p = t, q : tf", r : t""", s = "
FTILE:   ' = floor_necropolis_square_grass
FTILE:   "A>tGf = floor_necropolis_grass
: set_feature_name("metal_statue", "iron statue")
: vault_granite_statue_setup(_G, "G", "gravestone")
: decorative_floor(_G, 'V', "mourning vase")
: necropolis_wizmode_handling(_G)
: necropolis_default_appearance(_G)
: subvault('X : necropolis_subvault_' .. dgn.persist.necropolis_difficulty)
: subvault('Y : necropolis_subvault_' .. dgn.persist.necropolis_difficulty)
: subvault('Z : necropolis_subvault_' .. dgn.persist.necropolis_difficulty)
SUBST:   XYZ = .
: necropolis_sea_ghosts(_G)
: necropolis_portal_setup(_G)
MAP
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwQwwQwwwwwwwwwwNwwNwwwwwwwwwwwwwwNwwNwwwwwwwwwwQwwQwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwOwwOwwwwwwwwwwwwwwwwwwwwwwwwwwwwOwwOwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwPwwwwPwwwwwwwwMwwwwMwwwwwwwwwwwwMwwwwMwwwwwwwwPwwwwPwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwoooooooooooooooooooooooowwwwwwwwoooooooooooooooooooooooowwwwwwwwwwwv
vwwwwwwwwwwwocccDDcccFFccHHcccEEcccowwwwwwwwocccEEcccHHccFFcccDDcccowwwwwwwwwwwv
vwwwwwwwwPwwocXXXXXXXXXXXXXXXXXXXXcowwwwwwwwocYYYYYYYYYYYYYYYYYYYYcowwPwwwwwwwwv
vwwwwwwQwwwwocXXXXXXXXXXXXXXXXXXXXcowwwwwwwwocYYYYYYYYYYYYYYYYYYYYcowwwwQwwwwwwv
vwwwwwwwwwwwoHXXXXXXXXXXXXXXXXXXXXcowwwwwwwwocYYYYYYYYYYYYYYYYYYYYHowwwwwwwwwwwv
vwwwwwwwwwwwoHXXXXXXXXXXXXXXXXXXXXcowwwwwwwwocYYYYYYYYYYYYYYYYYYYYHowwwwwwwwwwwv
vwwwwwwQwwwwocXXXXXXXXXXXXXXXXXXXXcoooooooooocYYYYYYYYYYYYYYYYYYYYcowwwwQwwwwwwv
vwwwwwwwwPwwocXXXXXXXXXXXXXXXXXXXXcccccnncccccYYYYYYYYYYYYYYYYYYYYcowwPwwwwwwwwv
vwwwwwwwwwwwocXXXXXXXXXXXXXXXXXXXXcV........VcYYYYYYYYYYYYYYYYYYYYcowwwwwwwwwwwv
vwwwwwwwwwwwoFXXXXXXXXXXXXXXXXXXXXc..........cYYYYYYYYYYYYYYYYYYYYFowwwwwwwwwwwv
vwwwwwwwOwwwoFXXXXXXXXXXXXXXXXXXXXc.''''''''.cYYYYYYYYYYYYYYYYYYYYFowwwOwwwwwwwv
vwwwwwwwwwwwocXXXXXXXXXXXXXXXXXXXX+.'""""""'.+YYYYYYYYYYYYYYYYYYYYcowwwwwwwwwwwv
vwwwwwwwwwwwocXXXXXXXXXXXXXXXXXXXX+.'""pt""'.+YYYYYYYYYYYYYYYYYYYYcowwwwwwwwwwwv
vwwwwwwwOwwwoEXXXXXXXXXXXXXXXXXXXXc.'"p""t"'.cYYYYYYYYYYYYYYYYYYYYEowwwOwwwwwwwv
vwwwwwwwwwwwoEXXXXXXXXXXXXXXXXXXXXc.'"G""G"'.cYYYYYYYYYYYYYYYYYYYYEowwwwwwwwwwwv
vwwwwwwwwwwwocXXXXXXXXXXXXXXXXXXXXc.'"f""f"'.cYYYYYYYYYYYYYYYYYYYYcowwwwwwwwwwwv
vwwwwwwwwMwwocXXXXXXXXXXXXXXXXXXXXc.'""""""'.cYYYYYYYYYYYYYYYYYYYYcowwMwwwwwwwwv
vwwwwwwNwwwwocXXXXXXXXXXXXXXXXXXXXc.'"f""f"'.cYYYYYYYYYYYYYYYYYYYYcowwwwNwwwwwwv
vwwwwwwwwwwwoDXXXXXXXXXXXXXXXXXXXXc.'"G""G"'.cYYYYYYYYYYYYYYYYYYYYDowwwwwwwwwwwv
vwwwwwwwwwwwoDXXXXXXXXXXXXXXXXXXXXc.'"t""p"'.cYYYYYYYYYYYYYYYYYYYYDowwwwwwwwwwwv
vwwwwwwNwwwwocXXXXXXXXXXXXXXXXXXXXc.'""tp""'.cYYYYYYYYYYYYYYYYYYYYcowwwwNwwwwwwv
vwwwwwwwwMwwocXXXXXXXXXXXXXXXXXXXXc.'""""""'.cYYYYYYYYYYYYYYYYYYYYcowwMwwwwwwwwv
vwwwwwwwwwwwocccccccccccccccccccccc.''''''''.ccccccccccccccccccccccowwwwwwwwwwwv
vwwwwwwwwwwwooooooccc''''''''c....................c''''''''cccoooooowwwwwwwwwwwv
vwwwwwwwwwwwwwwwwocc'''''''''+....................+'''''''''ccowwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwoc''""""""''+....................+''""""""''cowwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwoc''"ts"t"''c.......V....V.......c''"t"st"''cowwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwMwwoc''""""""''cccccccccc++cccccccccc''""""""''cowwMwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwoB'""Gf"r""'cZZZZZZZZZZZZZZZZZZZZc'""r"fG""'Bowwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwoB'""""""""'cZZZZZZZZZZZZZZZZZZZZc'""""""""'Bowwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwoB'""q"fG""'cZZZZZZZZZZZZZZZZZZZZc'""Gf"q""'Bowwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwMwwoc''""""""''cZZZZZZZZZZZZZZZZZZZZc''""""""''cowwMwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwoc''"A"pt"''cZZZZZZZZZZZZZZZZZZZZc''"tp">"''cowwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwoc''""""""''cZZZZZZZZZZZZZZZZZZZZc''""""""''cowwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwocc''''''''ccZZZZZZZZZZZZZZZZZZZZcc''''''''ccowwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwoccc''''''cccZZZZZZZZZZZZZZZZZZZZccc''''''cccowwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwooccccCCcccccZZZZZZZZZZZZZZZZZZZZcccccCCccccoowwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwooooooooooocZZZZZZZZZZZZZZZZZZZZcooooooooooowwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwocZZZZZZZZZZZZZZZZZZZZcowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwocZZZZZZZZZZZZZZZZZZZZcowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwMwwMwwocZZZZZZZZZZZZZZZZZZZZcowwMwwMwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwocZZZZZZZZZZZZZZZZZZZZcowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwNwwNwwocZZZZZZZZZZZZZZZZZZZZcowwNwwNwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwocZZZZZZZZZZZZZZZZZZZZcowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwoDZZZZZZZZZZZZZZZZZZZZDowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwoDZZZZZZZZZZZZZZZZZZZZDowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwOwwocZZZZZZZZZZZZZZZZZZZZcowwOwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwocZZZZZZZZZZZZZZZZZZZZcowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwocccEEcccFFccFFcccEEcccowwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwOwwoooooooooooooooooooooooowwOwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwPwwPwwwwwwwwwwPwwPwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwQwwQwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwv
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
ENDMAP

#############################################################################
# <<3>> Necropolis subvaults
#
# The subvaults here are placed by the above layouts and tagged according to
# the depth of the Necropolis entry. Subvaults are either 19x19 or 20x20,
# and preferrably always the latter.
#
# Various tags and functions of note:
#  * luniq_necropolis_ghost_minimal: Used for vaults with 2 or less enemies
#    besides the player ghost, ensuring a minimum threat + rewards amount
#    in each Necropolis despite the several less-full ghost subvault options.
#  * luniq_necropolis_ghost_undead_centric: Used for vaults solely containing
#    undead. Ossuary, Crypt, Tartarus, Tomb, and Gloorx's domain are enough
#    undead places as is; undead shouldn't be the only focus in a given spawn.
#
# TODO:
#  * Pre-Temple D and the Lair branches could do with more subvault options.
#    (Some, like Snake, probably need to wait for more monsters first.)
#
#############################################################################

#############################################################################
# <<3.1>> (Generic) Necropolis subvaults with allow_dup
#############################################################################

# A subvaulted subvault for varying the surroundings of several very small
# ghost vaults that each contained nothing else besides a single ghost.
NAME:     necropolis_ghost_nesting_subvaults
: necropolis_depth_tagging(_G, {"all"})
TAGS:     allow_dup luniq_necropolis_ghost_minimal
WEIGHT:   25
SUBVAULT: A : necropolis_ghost_nested_inner_solo
SUBVAULT: B : necropolis_ghost_nested_outer_solo
SUBST:    AB = .
MAP
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBAAAAAAAAAABBBBB
BBBBBAAAAAAAAAABBBBB
BBBBBAAAAAAAAAABBBBB
BBBBBAAAAAAAAAABBBBB
BBBBBAAAAAAAAAABBBBB
BBBBBAAAAAAAAAABBBBB
BBBBBAAAAAAAAAABBBBB
BBBBBAAAAAAAAAABBBBB
BBBBBAAAAAAAAAABBBBB
BBBBBAAAAAAAAAABBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
ENDMAP

NAME:   gammafunk_necropolis_ghost_grave
TAGS:   allow_dup luniq necropolis_ghost_nested_inner_solo no_rotate
KMONS:  O = player ghost
KMONS:  p = withered plant
: lone_ghost_guarded_loot(_G, "O")
: lone_ghost_extra_loot(_G, "`")
: generic_ghost_weapon_loot(_G, "V", "V")
KFEAT:  V = V
SUBST:  t : tp
: vault_granite_statue_setup(_G, "G", "gravestone")
FTILE:  '`-de|*%$OGptV = floor_pebble_brown / floor_pebble_darkgray
KPROP:  '`-de|*%$OGpV = no_tele_into
: necropolis_ghost_setup(_G)
COLOUR: t = lightblue
TILE:   t = dngn_dead_tree_of_woe
MAP
..........
..........
..........
.cccccccc.
.ctGttVtc.
.ccdO`ecc.
..cn==nc..
..........
..........
..........
ENDMAP

NAME:   ebering_necropolis_ghost_rock_garden
TAGS:   allow_dup luniq necropolis_ghost_nested_inner_solo no_rotate
KMONS:  O = player_ghost
: local large_rocks = crawl.random_range(3,7)
: kitem("O = large rock q:" .. large_rocks)
KITEM:  ` = stone q:1 / large rock q:1 w:15
KITEM:  ! = potion of enlightenment pre_id
NSUBST: r = 1:O / 1:d / 1:e / 1:! / 1:tG / 1:t`` / *:`
: lone_ghost_extra_loot(_G, "`")
: generic_ghost_weapon_loot(_G, "`", "z")
COLOUR: '`-O!|*%$tG = yellow, c = white
TILE:   G = dngn_statue_orb
FTILE:  '`-O!$%*|ztG = floor_dirt
KPROP:  '`-O!$%*|ztG = no_tele_into
: necropolis_ghost_setup(_G)
MAP
..........
cccccccccc
c----r-r-c
crr------c
c-----r--c
c--------c
c--r-----c
cr-----r-c
cnn====nnc
..........
ENDMAP

NAME:   ebering_necropolis_ghost_reflecting_pool
TAGS:   allow_dup luniq necropolis_ghost_nested_inner_solo no_rotate
KMONS:  O = player_ghost
: lone_ghost_guarded_loot(_G, "O")
: lone_ghost_extra_loot(_G, "-")
: generic_ghost_weapon_loot(_G, "?", "?")
KFEAT:  O? = shallow_water
FTILE:  -$%*|?O' : floor_pebble_brown / floor_pebble_darkgray
KPROP:  -de$%*|?O' = no_tele_into
: necropolis_ghost_setup(_G)
MAP
..........
..cccccc..
..cdO?ec..
..c-ww-c..
..c-Ww-c..
..c-ww-c..
..c-wW-c..
..c-WW-c..
..cn==nc..
..........
ENDMAP

NAME:   ebering_necropolis_ghost_disaster_area
TAGS:   luniq necropolis_ghost_nested_inner_solo no_rotate
KMONS:  O = player ghost
KFEAT:  A = altar_qazlal
NSUBST: ' = 1:d / 1:e / 8 = wWl / -
: lone_ghost_guarded_loot(_G, "O")
: lone_ghost_extra_loot(_G, "'")
: generic_ghost_weapon_loot(_G, "-", "?")
SUBST:  P = GTVA
: if dgn.persist.necropolis_difficulty == "vaults_elf"
:  or dgn.persist.necropolis_difficulty == "vaults_elf" then
SUBST:  A = T
: end
: necropolis_ghost_setup(_G, false)
TILE:  c = wall_stone_scorched
KPROP: -'TVAOde$%*|? = no_tele_into
MAP
..........
cccccccccc
ccc'cc'ccc
cc''O''c'c
c'c'''''cc
c'''''c'cc
c''c''P'cc
cc'''''''c
ccn====ncc
..........
ENDMAP

##

NAME:    necropolis_nested_single_graves
TAGS:    allow_dup luniq necropolis_ghost_nested_outer_solo
TAGS:    necropolis_ghost_nested_outer_necro no_rotate
KFEAT:   - = open_clear_door
SHUFFLE: G- / gC
SUBST:   C = c, g = '
FTILE:   '-G = floor_pebble_brown / floor_pebble_darkgray
: vault_granite_statue_setup(_G, "G", "gravestone")
: necropolis_default_appearance(_G)
MAP
....................
.ccCcc........ccCcc.
.c'G'c........c'G'c.
.c'g'c........c'g'c.
.cc-cc........cc-cc.
.....          .....
.....          .....
.....          .....
.....          .....
.....          .....
.....          .....
.....          .....
.....          .....
.....          .....
.....          .....
.cc-cc........cc-cc.
.c'g'c........c'g'c.
.c'G'c........c'G'c.
.ccCcc........ccCcc.
....................
ENDMAP

NAME:    necropolis_nested_single_reflecting_pool
TAGS:    allow_dup luniq necropolis_ghost_nested_outer_solo
TAGS:    no_pool_fixup no_rotate
WEIGHT:  5
FTILE:   - : floor_pebble_brown / floor_pebble_darkgray
: necropolis_default_appearance(_G)
MAP
....................
..c----......----c..
..cwwwW......Wwwwc..
..c----......----c..
....................
.....          .....
.....          .....
.....          .....
.....          .....
.....          .....
.....          .....
.....          .....
.....          .....
.....          .....
.....          .....
....................
..c----......----c..
..cwwwW......Wwwwc..
..c----......----c..
....................
ENDMAP

NAME:    necropolis_nested_rock_garden
TAGS:    allow_dup luniq necropolis_ghost_nested_outer_solo no_rotate
WEIGHT:  5
ITEM:    stone q:1 no_pickup
FTILE:   'd = floor_dirt
: necropolis_default_appearance(_G)
MAP
....................
........cccc........
........''''........
....................
....................
.ccc.          .ccc.
.c''.          .''c.
.c'd.          .d'c.
.....          .....
.....          .....
.....          .....
.....          .....
.c'd.          .d'c.
.c''.          .''c.
.ccc.          .ccc.
....................
....................
........''''........
........cccc........
....................
ENDMAP

NAME:    necropolis_nested_further_trees
TAGS:    allow_dup luniq necropolis_ghost_nested_outer_solo
TAGS:    no_rotate no_pool_fixup
KMONS:   f = petrified flower
FTILE:   . = floor_necropolis_square_grass
FTILE:   'tf = floor_necropolis_grass
: necropolis_default_appearance(_G)
MAP
....................
..'''..''t''........
..'t'..''t''........
.'t'................
.'''................
.....          .....
.....          .....
.....          .'''.
.'''.          .'f'.
.'f'.          .''t.
.t''.          .'f'.
.'f'.          .'''.
.'''.          .....
.....          .....
.....          .....
................'''.
................'t'.
........''t''..'t'..
........''t''..'''..
....................
ENDMAP

NAME:    necropolis_nested_single_deadwoods
TAGS:    allow_dup luniq necropolis_ghost_nested_outer_necro no_rotate
WEIGHT:  30
FTILE:   . = floor_necropolis_square_grass
FTILE:   'Gt = floor_necropolis_grass
: necropolis_default_appearance(_G)
COLOUR:  t = lightblue
TILE:    t = dngn_dead_tree_of_woe
MAP
....................
.'''''........'''''.
.'G't'........'t'G'.
.''t''........''t''.
..''............''..
.'''.          '''..
.''t'          't''.
.'t''          ''t'.
.''t'          ''t'.
.''tt          't''.
.''t'          tt''.
.'t''          't''.
.'t''          ''t'.
.''t'          't''.
..'''          '''..
..''............''..
.''t''........''t''.
.'G't'........'t'G'.
.'''''........'''''.
....................
ENDMAP

####

# The ghost version of gammafunk_sealed_arena.
NAME:    gammafunk_necropolis_ghost_arena
: necropolis_depth_tagging(_G, {"all"})
TAGS:    allow_dup luniq
KMONS:   O = player ghost
: ghost_good_loot(_G)
: if dgn.persist.necropolis_difficulty == "pre_temple_d" then
SUBST:   d = *%, e = %, f = %$, ghij = $
NSUBST:  D = 1:0 / 1=009--- / *:-
: elseif dgn.persist.necropolis_difficulty == "pre_lair_d" then
SUBST:   e = *, f = *%,  g = %$$, ij = $
NSUBST:  D = 2:0 / 3=0- / 1:9 / 1=998--- / *:-
: elseif dgn.persist.necropolis_difficulty == "post_lair_d" then
SUBST:   f = |*, g = *, h = %$, ij = $
NSUBST:  D = 3:0 / 4 = 0- / 1:098- / 1:9 / 1:9- / 2=8- / *:-
: elseif dgn.persist.necropolis_difficulty == "lair" then
SUBST:   f = *, g = %$, hij = de$
NSUBST:  D = 2:0 / 3 = 0- / 1:098- / 2 = 9- / 1:8- / *:-
: elseif dgn.persist.necropolis_difficulty == "orc" then
SUBST:   f = |*, g = *%, h = %$$$, ij = $
NSUBST:  D = 2:0 / 4 = 0- / 1:9 / 1:9- / 2 = 8- / *:-
: elseif necropolis_in_lair_branch() then
SUBST:   fg = |*, h = *%, i = %$$$, j = $
NSUBST:  D = 3:0 / 3 = 0- / 1:098- / 1:9 / 2=9- / 1:8 / 1:8- / *:-
: elseif dgn.persist.necropolis_difficulty == "vaults_elf" then
SUBST:   fg = |*, h = *, i = %$, j = $
NSUBST:  D = 3:0 / 4 = 0- / 1:9 / 3=9- / 1:8 / 2 = 8- / *:-
: elseif dgn.persist.necropolis_difficulty == "depths_crypt" then
SUBST:   fgh = |*, i = *, ij = %$
NSUBST:  D = 3:0 / 5 = 0- / 2:9 / 2 = 9- / 1:8 / 3 = 8- / *:-
: end
KITEM:   V = any potion
KFEAT:   V = V
: generic_ghost_weapon_loot(_G, "$", "?")
SHUFFLE: yzYZ / zyYZ / zyZY
SUBST:   r : x-, s : x-, x : cx, yY : cx, zZ = .
NSUBST:  R = 1:R / *:"-"
FTILE:   G = floor_necropolis_grass
FTILE:   R" = floor_necropolis_square_grass
MARKER:  P = lua:transp_loc("necropolis_ghost_arena_entry")
MARKER:  Q = lua:transp_dest_loc("necropolis_ghost_arena_entry")
MARKER:  R = lua:transp_loc("necropolis_ghost_arena_exit")
MARKER:  S = lua:transp_dest_loc("necropolis_ghost_arena_exit")
KPROP:   -QR"VO089de$%*|? = no_tele_into
: necropolis_generic_spawns(_G)
: necropolis_ghost_setup(_G)
MAP
....................
.ycz............ZcY.
.c.c............c.c.
.zcy............YcZ.
.....nnnnnnnnnn.....
....nnRD---DDRnn....
....nG"rsDDsr"Gn....
....n"-sr--rsg"n....
....nDD--DD-Dien....
...Pn-O-DQ-D-Ddn....
....n-D-D-VD-DdnS...
....nDD--DD-Djfn....
....n"-sr--rsh"n....
....nG"rsDDsr"Gn....
....nnRD---DDRnn....
.....nnnnnnnnnn.....
.ZcY............ycz.
.c.c............c.c.
.YcZ............zcy.
....................
ENDMAP

NAME:   gammafunk_necropolis_ghost_split
: necropolis_depth_tagging(_G, {"all"})
TAGS:   allow_dup luniq
KMONS:  O = player ghost
: ghost_good_loot(_G)
: if dgn.persist.necropolis_difficulty == "pre_temple_d" then
SUBST:  d = *%, e = %$, fgh = $
NSUBST: D = 2:0 / 2 = 0' / 1:9' / *:'
: elseif dgn.persist.necropolis_difficulty == "pre_lair_d" then
SUBST:  d = *, e = *%, f = %$$$, gh = $
NSUBST: D = 2:0 / 3 = 0' / 1:9' / 1:98'' / *:'
: elseif dgn.persist.necropolis_difficulty == "post_lair_d" then
SUBST:  e = **|, fg = %$, h = $
NSUBST: D = 2:0 / 4:0' / 1:9 / 2=9' / 1:98 / *:'
: elseif dgn.persist.necropolis_difficulty == "lair" then
SUBST:  f = *%, g = %$$$, h = $
NSUBST: D = 3:0 / 3 = 0' / 2 = 9' / 1:8' / 1:98'' / *:'
: elseif dgn.persist.necropolis_difficulty == "orc" then
SUBST:  f = *, g = %$, h = $
NSUBST: D = 2:0 / 4 = 0' / 1:9 / 1:9' / 2 = 8' / *:'
: else -- Lair branches, Vaults, Elf, Crypt, Depths.
SUBST:  fgh = |*
NSUBST: D = 1:0 / 2 = 0' / 2:9 / 2 = 9' / 1:8 / 2 = 8' / *:'
: end
SUBST:  p : x', q : x', x : xc
: generic_ghost_weapon_loot(_G, "$", "?")
KPROP:  'defgh$%*|?089O = no_tele_into
SUBVAULT: B : necropolis_ghost_nested_outer_solo
SUBST:  B = .
: necropolis_ghost_setup(_G)
: necropolis_generic_spawns(_G)
MAP
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBcccnnnncccBBBBB
BBBBBcD''DD''DcBBBBB
BBBBBc'ge$dfh'cBBBBB
BBBBBn'qp''pq'nBBBBB
BBBBBnDpq'OqpDnBBBBB
BBBBBn'qp''pq'nBBBBB
BBBBBc''D''D''cBBBBB
BBBBBcD''''''DcBBBBB
BBBBBcnn====nncBBBBB
BBBBB..........BBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBB
ENDMAP

NAME:    gammafunk_necropolis_ghost_cemetery
: necropolis_depth_tagging(_G, {"pre_lair_d", "post_lair_d", "orc", "snake",
:                               "shoals", "spider", "vaults_elf", "depths_crypt"})
TAGS:    allow_dup luniq
: if dgn.persist.necropolis_difficulty == "pre_lair_d" then
WEIGHT:  3
: end
KMONS:   DFH = player ghost
KMONS:   p = withered plant
# 1/12 chance for 5 ghosts, 1/6 for 4, 1/4 for 3, 1/2 for 2.
SHUFFLE: FfrHhs / ZyzHhs / ZyzHhs / FfrZyz / FfrZyz / FfrZyz / ZyzZyz / \
         ZyzZyz / ZyzZyz / ZyzZyz / ZyzZyz / ZyzZyz
# 1.5 items per ghost, upgrading quality with depth. 'd' and 'e' get replaced
# with good_items later on.
: ghost_good_loot(_G)
: if dgn.persist.necropolis_difficulty == "pre_lair_d" then
NSUBST:  de = 2:* / *%$-, f = * / *%$-, h = 2=* / *%$-
: elseif dgn.persist.necropolis_difficulty == "post_lair_d" then
NSUBST:  d = 1:d / * = *%$-, e = 1:e / |*--, f = 1:|* / * = |*--
NSUBST:  h = 2 = |* / * = |*--
: else   -- Orc, Shoals, Snake, Spider Vaults, Elf, Depths, Crypt.
NSUBST:  d = 1:d / * = |*%-, e = 1:e / * = |*%-, f = 1:|* / * = |*%-
NSUBST:  h = 2 = |* / * = |*%-
: end
SUBST:   qrs = G, Z = -, y = p, z = V, p : tp
COLOUR:  t = lightblue
TILE:    t = dngn_dead_tree_of_woe
TILE:    c = wall_crypt
KPROP:   -de$%*|DFGHpGVt = no_tele_into
FTILE:   -'de|*%$DFHpGVt = floor_pebble_brown / floor_pebble_darkgray
: necropolis_ghost_setup(_G, false)
MAP
....................
....................
..ccc...cccc...ccc..
..ctc...c''c...ctc..
....................
....................
......cccccccc......
.....ccdf-rfecc.....
....ccq--F---qcc....
....cd-D----D-ec....
....ch--------hc....
....csH------Hsc....
....ch--------hc....
....ccnn====nncc....
....................
....................
..ctc...c''c...ctc..
..ccc...cccc...ccc..
....................
....................
ENDMAP
